version: '3.8'

services:
  sales-desk:
    build: .
    container_name: sales-desk
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - PERSISTENCE_BACKEND=${PERSISTENCE_BACKEND:-postgres}
      - DATABASE_URL=postgresql://salesdesk:${DB_PASSWORD:-salesdesk123}@postgres:5432/salesdesk
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - WEBHOOK_SHARED_SECRET=${WEBHOOK_SHARED_SECRET:-changeme}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./token.pickle:/app/token.pickle
      - ./logs:/app/logs
      - ./documents:/app/documents
    command: python main.py monitor --interval 60
    depends_on:
      - postgres
      - redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for audit trail
  postgres:
    image: postgres:15-alpine
    container_name: sales-desk-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=salesdesk
      - POSTGRES_USER=salesdesk
      - POSTGRES_PASSWORD=${DB_PASSWORD:-salesdesk123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U salesdesk -d salesdesk"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: sales-desk-cache
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
